import boto3
from datetime import datetime
from pytz import timezone
import logging
#setup simple logging for INFO
logger = logging.getLogger()
logger.setLevel(logging.INFO)

def lambda_handler(event, context):
    # Use the filter() method of the instances collection to retrieve
    # all running EC2 instances.
    now = datetime.now(timezone('CET'))
    today8am = now.replace(hour=8, minute=0, second=0, microsecond=0)
    today6pm = now.replace(hour=18, minute=0, second=0, microsecond=0)
    # connection to Amazon EC2
    ec2 = boto3.resource('ec2', 'us-east-1')
    StoppedInstances=['i-02e59ddfa9c052be1']
    #ec2 = boto3.resource('ec2', 'us-east-1')
    # filters = [
    #     {
    #         'Name': 'instance-state-name', 
    #         'Values': ['running']
    #     }
    # ]
    
    # #filter the instances
    # instances = ec2.instances.filter(Filters=filters)
    #locate all running instances
    #StoppedInstances = [instance.id for instance in instances]
    
    #print the instances for logging purposes
    #print StoppedInstances 
    
    #make sure there are actually instances to shut down. 
    if now < today6pm and now >= today8am:
        if len(StoppedInstances) > 0:
            #perform the shutdown
            starting = ec2.instances.filter(InstanceIds=StoppedInstances).start()
            print(starting)
        else:
            print("Nothing to see here")
    else:
        print("Time not matched for start")
